{"version":3,"sources":["App.tsx","GoodsList.tsx","Server.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","handleSortByAlpabet","ALPABET","handleSortByLength","LENGTH","this","condition","preparedGoods","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","className","type","classnames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAOKA,E,wGCDQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,6BACGA,GADMA,SCTFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SFHGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAWL,IA8BaM,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,oBAAsB,WACpB,EAAKD,SAAS,CAAEH,SAAUT,EAASc,WAbvC,EAgBEC,mBAAqB,WACnB,EAAKH,SAAS,CAAEH,SAAUT,EAASgB,UAjBvC,EAoBEN,KAAO,WACL,EAAKE,SAAS,CAAEH,SAAUT,EAASU,QArBvC,4CAwBE,WACE,MAAiCO,KAAKV,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdS,EAAaT,IAAaT,EAASU,MAAQF,EAE3CW,EA1DgB,SACxBjB,EADwB,GAGvB,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOlB,GAiBzB,OAfAkB,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQd,GACN,KAAKT,EAASc,QACZ,OAAOQ,EAAEE,cAAcD,GACzB,KAAKvB,EAASgB,OACZ,OAAOM,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITjB,GACFY,EAAaT,UAGRS,EAqCHM,CAAkBrB,EAAiB,CAAEI,WAAUD,eAEjD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYpB,IAAaT,EAASc,UAGtCgB,QAASb,KAAKJ,oBAPhB,iCAYA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYpB,IAAaT,EAASgB,SAGtCc,QAASb,KAAKF,mBAPhB,4BAYA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYpB,IAAaT,EAASU,OAGtCoB,QAASb,KAAKN,QAPhB,qBAYCO,GAED,wBACEU,KAAK,SACLD,UAAWE,IACT,mBAAoB,CAClB,YAAarB,IAGjBsB,QAASb,KAAKP,KAPhB,sBAcF,6BACE,cAAC,EAAD,CAAWR,MAAOiB,aAvF5B,GAAyBY,IAAMC,WG7C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.962b40b3.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classnames from 'classnames';\nimport { GoodsList } from './GoodsList';\nimport { goodsFromServer } from './Server';\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nconst getReorderedGoods = function (\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a:string, b: string): number => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\n type State = {\n   isReversed: boolean,\n   sortType: SortType,\n };\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleSortByAlpabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  handleSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  NONE = () => {\n    this.setState({ sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const condition = (sortType !== SortType.NONE || isReversed);\n\n    const preparedGoods\n    = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classnames(\n              'button is-info', {\n                'is-light': sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={this.handleSortByAlpabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames(\n              'button is-success', {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames(\n              'button is-warning', {\n                'is-light': sortType !== SortType.NONE,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {condition\n        && (\n          <button\n            type=\"button\"\n            className={classnames(\n              'button is-danger', {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.NONE}\n          >\n            Reset\n          </button>\n        )}\n        </div>\n\n        <ul>\n          <GoodsList goods={preparedGoods} />\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\n  type Props = {\n    goods: string[];\n  };\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}